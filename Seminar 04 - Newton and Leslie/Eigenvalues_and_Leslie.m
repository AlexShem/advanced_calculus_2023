%% Собственные числа, вектора, и модель Лесли - Лефковича

%% Собственные числа и вектора
% По опрделению, собственное число $\lambda$ и собственный вектор $\vec v$ 
% матрицы $\mathbf{A}$ это такие элементы, которые удовлетворяют 
% 
% $\mathbf{A} v = \lambda \vec v$
% 
% Перенся всё влево получаем
% 
% $(\mathbf{A} - \lambda \mathbf{I}) \vec v = \vec 0$
% 
% Некоторая матрица $(\mathbf{A} - \lambda \mathbf{I})$ переводит вектор в
% нулевой, значит её определитель равен нулю:
% 
% $\mathrm{det}(\mathbf{A} - \lambda \mathbf{I}) = 0.$
% 
% Пусть нам задана матрица $\mathbf{A}$
A = [1, -1, 0;
    0, 2, 0;
    0, 0, 3]

%%
% и необходимо найти её собственные числа. Это можно сделать с помощью
% функции
% <https://ch.mathworks.com/help/releases/R2021b/matlab/ref/eig.html eig>.
eig(A)

%%
% Чтобы вдобавок найти и собственные вектора, необходимо "запросить" два
% возвращаемых значения функции
% <https://ch.mathworks.com/help/releases/R2021b/matlab/ref/eig.html eig>.
[V, D] = eig(A)

%%%
% Здесь |V| - матрица, в столбцах которой стоят нормированные собственные вектора $\vec v_i$, а
% матрица |D| - диагональная, где собственное число $\lambda_i =$ |D(i,i)| отвечает
% собственному вектору $\vec v_i =$ |V(:, i)|.

%%
% Второй собственный вектор |V(:, 2)| есть вектор |v_2 = [-1; 1; 0]| (с
% точностью до константы). Тогда, уможая матрицу $\mathbf{A}$ на $v_2$ 4
% раза, собственный вектор 4 раза умножится на собственное число $\lambda_2
% = 2$, то есть
% 
% $\mathbf{A}^4 \vec v_2 = \lambda_2 \mathbf{A}^3 \vec v_2 = \ldots = \lambda_2^4 \vec v_2.$
% 
v_2 = [-1;1;0];
A^4 * v_2

%% Лесли: инициализация
% Рассмотрм модель Лесли эволюции численности населения с тремя группами
% населения. Обозначим их "молодые" (0 - 20 лет), "взрослые" (21 - 50), и
% "пожилиые" (51-90). Распределение по возрастам условное.
% 
% Запишем размеры трех групп в переменную |m|.

m = [20 30 40];
cumsum(m)
(m-1)./m

%%
% Матрица Лесли для трех групп имеет вид
%
% $$L = \pmatrix{\frac{m_1 - 1}{m_1} (1-\alpha) & b & 0 \cr \frac{1}{m_1}
% (1 - \alpha) & \frac{m_2 - 1}{m_2} & 0 \cr 0 & \frac{1}{m_2} & \frac{m_3 - 1}{m_3} (1-\beta)},$$
%
% где $\alpha, \beta$ - смертность в первой и третьей группах,
% соответсвтенно; $b$ - рождаемость во второй группе.
% 
% Функция
% <https://ch.mathworks.com/help/releases/R2021b/matlab/ref/diag.html
% diag> создает из вектора матрицу, где на диагонали стоит тот самый
% вектор. Второй аргумент контролирует номер диагонали (+2 для сдвига вверх
% на две, -1 для сдвига на одну вниз от главной диагонали).
% 
% Эти операции помогут при создании матрицы Лесли больших размеров.
diag((m-1)./m)
%%
diag(1./m(1:end-1), -1)
%%
diag((m-1)./m) + diag(1./m(1:end-1), -1)

%% Лесли: создание матрицы L
L = diag((m-1)./m) + diag(1./m(1:end-1), -1);
alpha = .05;
beta = .5;
b = .04;

%%%
L(1, 2) = b;
L(1:2, 1) = L(1:2, 1) * (1 - alpha);
L(end, end) = L(end, end) * (1 - beta)

%% Лесли: собственные числа и вектора матрицы L
% Найдем собственные числа и вектора матрицы Лесли.
[V, D] = eig(L)
%%%
% Обратим внимание на то, что все собственные числа по модулю меньше 1. Это
% значит, что при большом времени наша популяция будем уменьшаться.

%% Лесли: симуляция
% Пусть в начальным момент времени у нас имеется следующее распрделение
% численнсти населения:
p_0 = [10; 40; 20];
%%
% После одного года это число изменится:
p_1 = L*p_0

%%
% Зададим период в 100 лет и посчитаем число населения в каждый момент
% времени.

N = 100;
p = zeros(3, N + 1);
p(:, 1) = p_0;

for k = 1 : N
    p(:, k+1) = L * p(:, k);
end

%% Лесли: разложение начального условия по собственным векторам матрицы L
% Собственные вектора матрицы Лесли задают нормированный базис (но не
% ортогональный). Чтобы разложить начальное распредление |p_0| по этому
% базису, необходимо найти такие коэффициенты $a, b, c$, что
%
% $$ a \vec v_1 + b \vec v_2 + c \vec v_3 = \vec p_0 $$,
% 
% или в матричнов виде
% 
% $$ V \cdot \pmatrix{a \cr b \cr c} = \vec p_0. $$
%
% Таким образом,
% 
% $$ \pmatrix{a \cr b \cr c} = V^{-1} \vec p_0.$$
% 

% inv(V) * p_0
% V^-1 * p_0
abc = V \ p_0

%%
%  Проверим полученное разложение:
a = abc(1);
b = abc(2);
c = abc(3);
v1 = V(:, 1);
v2 = V(:, 2);
v3 = V(:, 3);
disp(a*v1 + b*v2 + c*v3);

%% Лесли: анализ
% Важное свойство в линейной алгебре (и в модели Лесли):
% 
% $$ \mathbf{L}^N \vec p_0 = \mathbf{L}^N (a \vec v_1 + b \vec v_2 + c \vec v_3) = a \lambda_1^N \vec v_1 + b \lambda_2^N \vec v_2 + c \lambda_3^N \vec v_3. $$
% 
% Возведем все собственные числа в степерь |N|.
disp(diag(D).^N)
%%%
% Заметим, что все собственные числа, кроме одного, занулились (а точнее,
% стали очень близки к нулю).

%%
% Таким обрзом, при больших временах можно аппроксимировать распределение
% численности населения собственным вектором, отвечающим наибольшему
% собственному числу.
[lam_max, max_ind] = max(diag(D));
p_N_approx = abc(max_ind) * lam_max.^(0:N) .* v2;

%%
% Разница в конечный момент времени между нашей аппроксимацией и точным
% значением есть
disp(p_N_approx(:, end) - p(:, end));

%%
% Посчитаем общую численность населения в каждый момент времени и запишем
% её в |p_size|.
p_size = sum(p);

%%
% Построим график эволюции численности населения
figure(9);
plot(0:N, p_size, '-', 'LineWidth', 2); % Общее количество населения
grid on;

hold on;
plot(0:N, sum(p_N_approx), '.r', 'MarkerSize', 6); % Аппроксимация общего количества населения
plot(0:N, p, '-.');  % Количество "молодых", "взрослых" и "пожилых"
hold off;

xlabel('n, year');
legend('Population size', 'Population approximation', 'Babies', 'Adults', 'Elderly');
title('Poupulation evolution over time', 'according to the Leslie model');
